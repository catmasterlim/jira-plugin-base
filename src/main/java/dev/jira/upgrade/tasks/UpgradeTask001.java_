 package dev.jira.upgrade.tasks;
 
 import com.atlassian.jira.propertyset.JiraPropertySetFactory;
 import dev.jira.WorkflowLayoutPropertyKeyBuilder;
 import com.atlassian.plugin.spring.scanner.annotation.export.ExportAsService;
 import com.atlassian.sal.api.message.Message;
 import com.atlassian.sal.api.upgrade.PluginUpgradeTask;
 import com.opensymphony.module.propertyset.PropertySet;
 import java.util.Collection;
 import org.apache.commons.lang3.StringUtils;
 import org.apache.log4j.Logger;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Component;

 
 
 @ExportAsService
 @Component
 public class UpgradeTask001
   implements PluginUpgradeTask
 {
   private static final Logger log = Logger.getLogger(UpgradeTask001.class);
   
   private final LegacyWorkflowLayoutPropertyKeyMigration legacyWorkflowLayoutPropertyKeyMigration;
   
   @Autowired
   public UpgradeTask001(LegacyWorkflowLayoutPropertyKeyMigration legacyWorkflowLayoutPropertyKeyMigration) {
     this.legacyWorkflowLayoutPropertyKeyMigration = legacyWorkflowLayoutPropertyKeyMigration;
   }
 
   
   public int getBuildNumber() {
     return 1;
   }
 
   
   public String getShortDescription() {
     return "Migrating workflow layouts to a new storage format.";
   }
 
   
   public Collection<Message> doUpgrade() throws Exception {
     this.legacyWorkflowLayoutPropertyKeyMigration.perform();
     return null;
   }
 
   
   public String getPluginKey() {
     return "dev.jira.workflow-action-handler";
   }
 
   
   @Component
   public static class LegacyWorkflowLayoutPropertyKeyMigration
   {
     private final PropertySet propertySet;
     
     @Autowired
     public LegacyWorkflowLayoutPropertyKeyMigration(JiraPropertySetFactory jiraPropertySetFactory) {
       this.propertySet = jiraPropertySetFactory.buildNoncachingPropertySet("dev.jira.workflow-action-handler");
     }
 
 
     
     public void perform() {
       try {
         Collection<String> liveKeys = this.propertySet.getKeys(LegacyLayoutKeys.Live.prefix());
         migrate(liveKeys, LegacyLayoutKeys.Live.prefix(), LegacyLayoutKeys.Live.state());
         
         Collection<String> draftKeys = this.propertySet.getKeys(LegacyLayoutKeys.Draft.prefix());
         migrate(draftKeys, LegacyLayoutKeys.Draft.prefix(), LegacyLayoutKeys.Draft.state());
       }
       catch (Exception anException) {
         
         UpgradeTask001.log
           .error("An error occurred while trying to migrate the existing workflow layouts to the new md5sum based storage format.", anException);
       } 
     }
 
 
 
 
 
     
     private void migrate(Iterable<String> legacyLayoutPropertyKeys, String keyPrefix, WorkflowLayoutPropertyKeyBuilder.WorkflowState workflowState) {
       for (String legacyLayoutKey : legacyLayoutPropertyKeys) {
         
         String workflowName = StringUtils.removeStart(legacyLayoutKey, keyPrefix);
 
 
 
         
         String newLayoutKey = WorkflowLayoutPropertyKeyBuilder.newBuilder().setWorkflowName(workflowName).setWorkflowState(workflowState).build();
         this.propertySet.setText(newLayoutKey, this.propertySet.getText(legacyLayoutKey));
       } 
       for (String legacyLayoutKey : legacyLayoutPropertyKeys) {
         
         if (this.propertySet.exists(legacyLayoutKey))
         {
           this.propertySet.remove(legacyLayoutKey);
         }
       } 
     }
     
     private static class LegacyLayoutKeys
     {
       private static class Live {
         private static String prefix() {
           return "jira.jwd.layout:";
         } private static WorkflowLayoutPropertyKeyBuilder.WorkflowState state() {
           return WorkflowLayoutPropertyKeyBuilder.WorkflowState.LIVE;
         }
       }
       
       private static class Draft { private static String prefix() {
           return "jira.jwd.draft.layout:";
         }
      private static WorkflowLayoutPropertyKeyBuilder.WorkflowState state() { 
        return WorkflowLayoutPropertyKeyBuilder.WorkflowState.DRAFT; } } } 
      private static class Live { 
        private static String prefix() { return "jira.jwd.layout:"; } 
        private static WorkflowLayoutPropertyKeyBuilder.WorkflowState state() { 
            return WorkflowLayoutPropertyKeyBuilder.WorkflowState.LIVE; } 
        } 
        private static class Draft { 
            private static WorkflowLayoutPropertyKeyBuilder.WorkflowState state() {
                 return WorkflowLayoutPropertyKeyBuilder.WorkflowState.DRAFT; 
                }
            private static String prefix() {
                return "jira.jwd.draft.layout:";
            } 
        }
   
   }
 }
