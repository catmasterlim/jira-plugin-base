{namespace JIRA.WorkflowActionHandler.Templates}

/**
 * action search dialog
 * @param title the title of the dialog
 * @param isDraft isDraft
 * @param workflowName name of workflow
 */
{template .searchDialog}
<section
    id="workflow-action-handler-dialog"
    class="aui-dialog2 aui-dialog2-xlarge aui-layer "
    role="dialog"
    tabindex="-1"
    aria-modal="true"
    aria-labelledby="dialog-show-button--heading"
    aria-describedby="dialog-show-button--description"
    style="width: 90%;height: 90%;"
    hidden
>
    <header class="aui-dialog2-header">
        <h1 class="aui-dialog2-header-main" id="dialog-show-button--heading">{$title}</h1>
    </header>
    <div class="aui-dialog2-content" id="dialog-show-button--description">
        <h2>
                <span class="workflow-name">{$workflowName}</span>
                <span class=""> isDraft : {$isDraft} </span>
        </h2>


        <div id="container-workflow-action-handler-searchbar" > 
                {call .searchOptionsBar}
                {/call}
        </div>
                                        
        <div id="container-workflow-action-handler-actions" class="navigator-group">

        </div>

    </div>
    <footer class="aui-dialog2-footer">
        <div class="aui-dialog2-footer-actions">
            <button id="workflow-action-handler-dialog-submit-button" class="aui-button aui-button-primary">Make it so</button>
        </div>
    </footer>
</section>
{/template}


/**
 * Search bar
 *
 */
{template .searchOptionsBar}
<form class="aui navigator-search query-component generic-styled">
<div class="aui-group">
<div class="aui-item search-wrap">
<div class="search-container" data-mode="basic">
<div class="search-field-container">
<div class="search-criteria-container">
<div class="search-criteria">     
    <ul class="criteria-list" style="display: flex;">

        {let $tempMap: ['Validator' : 'Validator', 'Condition' : 'Condition', 'PostFunction' : 'PostFunction'] /}
        {let $tempList: ['Condition' : true, 'PostFunction' : false] /}

        <li>
            <button id="workflow-action-handler-search-button" class="aui-button aui-button-primary search-button"> Search Action </button>
        </li>
   </ui>
</div>
</div>
</div>
</div>
</div>
</div>
</form>

{/template}

/**
 * add action bar
 */
{template .actionBarAdd}
<div class="aui-buttons">
    <a class="aui-button" id="add-status" >Add Statu</a>
    <a class="aui-button" id="add-transition" >Add Transition</a>
    <a class="aui-button" id="add-action" >Add Action</a>
</div>
{/template}

{export extern ...}
  {javaimpl class="dev.impl.SoyFunctions"
      method="includes"
      params="java.util.List, Object"
      return="boolean" /}
{/extern}



/**
 * Search Option
 */
{template .searchOption}
    {@param optionId: string}   // id of option
    {@param optionLabel: string} // label of option(display)
    {@param useFindInput: ?}  // useFindInput find input - true, false
    {@param? useShowSelectedOnTop: ?}  // useShowSelectedOnTop find input - true, false
    {@param items: ?} // item of option map ( key, value )
    {@param selectedItems: ? }

    {let $hasSelected : length($selectedItems) > 0 /}
<li data-id="{$optionId}" class="search-option">
    <button id="{$optionId}-button" class="aui-button aui-dropdown2-trigger" aria-controls="{$optionId}-dropdown">
        {$optionLabel} : All
    </button>
    <aui-dropdown-menu id="{$optionId}-dropdown">
        {if $useFindInput}
        <aui-section label="">
            <div class="check-list-field-container">
                <div class="assistive" aria-live="polite">1 result available. Type to search and press Tab to navigate through options.</div>
                <input autocomplete="off" placeholder="Find ..." class="text" id="searcher-{$optionId}-input" >
                <span class="icon-default aui-icon aui-icon-small aui-iconfont-search noloading"></span>
            </div>
        </aui-section>
        {/if}
        {if $useShowSelectedOnTop}
        <aui-section label="" class="selected-items">
            <button class="clear-all aui-button aui-button-link aui-button-link-icon-text"  {if not $hasSelected} style="display: none;" {/if} href="#" >Clear selected items</button>
            {foreach $key in keys($items)}
                {if $selectedItems?[$key]}
                <aui-item-checkbox interactive checked value="{$key}" > {$items?[$key]} </aui-item-checkbox>
                {/if}
            {/foreach}
        </aui-section>
        {/if}
        <aui-section label="{$optionLabel}" class="aui-list-truncate items">
            {foreach $key in keys($items)}
                {if $selectedItems?[$key]}
                    {if not $useShowSelectedOnTop}
                    <aui-item-checkbox interactive checked value="{$key}" > {$items?[$key]} </aui-item-checkbox>
                    {/if}
                {else}
                <aui-item-checkbox interactive value="{$key}" > {$items?[$key]} </aui-item-checkbox>
                {/if}
            {/foreach}
        </aui-section>
    </aui-dropdown-menu>
 </li>
{/template}

/**
* Action Condition Args
* @param isDraft isDraft
* @param workflowName name of workflow
* @param hasMultiConditionInTransition has multi condition of transition
* @param action action of workflow
*/
{template .actionConditionArgs}
    {let $workflowMode : $isDraft ? 'draft' : 'live' /}
    {let $workflowStep : 1 /}
    {let $workflowTransition : $action['transitionId'] /}
    {let $count : $action['order']  /}
    {let $descriptorTab : 'conditions' /}
    {let $args : $action['args']/}
    {let $className : $args['class.name'] /}

    {switch $className}
          {case 'com.atlassian.jira.workflow.condition.PermissionCondition'}
          <li class="criteria-item" style="border-top: 0px;list-style-type: none;">
          {if $isDraft}
              <div class="aui-buttons">
              <a class="aui-button aui-button-link criteria-condition-add-grouped"  {if not $hasMultiConditionInTransition}  aria-disabled="true"  {/if}
                href="AddWorkflowTransitionCondition!default.jspa?workflowMode={$workflowMode}&amp;workflowName={$workflowName}&amp;descriptorTab={$descriptorTab}&amp;workflowStep={$workflowStep}&amp;workflowTransition={$workflowTransition}&amp;count={$count}&amp;nested=true" title="Add grouped condition" resolved="">
              <span class="aui-icon aui-icon-small aui-iconfont-devtools-fork">
              Add grouped condition
              </span>
              </a>
              <a class="aui-button aui-button-link criteria-condition-edit" href="EditWorkflowTransitionConditionParams!default.jspa?workflowMode={$workflowMode}&amp;workflowName={$workflowName}&amp;descriptorTab={$descriptorTab}&amp;workflowStep={$workflowStep}&amp;workflowTransition={$workflowTransition}&amp;count={$count}" title="Edit" resolved="">
              <span class="aui-icon aui-icon-small aui-iconfont-edit">Edit</span>
              </a>

                <a class="aui-button aui-button-link criteria-condition-delete" href="DeleteWorkflowTransitionCondition.jspa?workflowMode={$workflowMode}&amp;workflowName={$workflowName}&amp;descriptorTab={$descriptorTab}&amp;workflowStep={$workflowStep}&amp;workflowTransition={$workflowTransition}&amp;count={$count}" title="Delete" resolved="">
                <span class="aui-icon aui-icon-small aui-iconfont-remove">Delete</span>
                </a>
                </div>
            {/if}
                Only users with <b>{$args['permissionKey']}</b> permission can execute this transition.
            </li>

          {default}
            <b>Hello Human</b>
    {/switch}

{/template}


/**
 * Action List
 * @param actionCount count of action
 * @param transitionCount count of transition
 */
{template .actionResultCount}
    Showing results : {$actionCount} actions of {$transitionCount} transitons
{/template}


/**
 * Transition Link
 * /secure/admin/workflows/ViewWorkflowTransition.jspa?
 * workflowMode=draft&workflowName=TEST%3A+Project+Management+Workflow&descriptorTab=conditions&workflowStep=1&workflowTransition=11
 * @param isDraft isDraft
 * @param workflowName name of workflow
 * @param transition transition of workflow
 *
 */
{template .transitionLink}
    {let $workflowMode : $isDraft ? 'draft' : 'live' /}
    {let $workflowTransition : $transition['id'] /}
    {let $workflowSteps : $transition['steps'] /}
    {let $descriptorTab : 'conditions' /}

    {let $workflowStep : $workflowSteps[0] /}
    {let $workflowStepId : $workflowStep['id'] /}

  <a href="ViewWorkflowTransition.jspa?workflowMode={$workflowMode}&amp;workflowName={$workflowName}&amp;descriptorTab={$descriptorTab}&amp;workflowStep={$workflowStepId}&amp;workflowTransition={$workflowTransition}" title="" id="edit_action_{$workflowStepId}_{$workflowTransition}">{$transition['name']}</a>
  <span class="smallgrey">({$workflowTransition})</span>
{/template}

/**
 * Action List
 * @param isDraft isDraft
 * @param workflowName name of workflow
 * @param actions name of workflow
 * @param transitionMap map of transition
 */
{template .actionList}
<div class="results-panel navigator-item">
<div class="navigator-content" >
<div class="aui aui-item">
    <span class="results-count-text">
    </span>
</div>
<table class="aui aui-table-sortable">
    <h2 class="hidden" > {$workflowName} {$isDraft} </h2>
    <thead>
        <tr>
            <th id="action-name" class="aui-table-column-issue-key" >Action Name</th>
            <th id="action-type">Type</th>
            <th id="action-order">Order</th>
            <th id="action-class-type">Class Name</th>
            <th id="action-class-simple">Class Simple name</th>
            <th id="action-class">Class name</th>
            <th id="action-args">Value</th>
            <th id="transition-id">TransitionId</th>
            <th id="transition-name">TransitionName</th>
        </tr>
    </thead>
    <tbody>
        {foreach $a in $actions}
            {let $transition : $transitionMap[$a['transitionId']] /}
            <tr class='hidden' >
                <td id="action-name" value="{$a['name']}" >{$a['name']}</td>
                <th id="action-type" value="{$a['type']}" >{$a['type']}</th>
                <th id="action-order" value={$a['order']} >{$a['order']}</th>
                <th id="action-class-type" value="{$a['classType']}" >{$a['classType']}</th>
                <th id="action-class-simple" value={$a['classSimpleName']} >{$a['classSimpleName']}</th>
                <th id="action-class" value={$a['className']} >{$a['className']}</th>
                <th id="action-args">
                    {call .actionConditionArgs}
                        {param isDraft: $isDraft /}
                        {param workflowName: $workflowName /}
                        {param hasMultiConditionInTransition: $transition['countCondition'] > 1 /}
                        {param action: $a /}
                    {/call}
                </th>
                <th id="transition-id" value={$a['transitionId']} >
                    {call .transitionLink}
                        {param isDraft: $isDraft /}
                        {param workflowName: $workflowName /}
                        {param transition: $transition /}
                    {/call}
                </th>
                <th id="transition-name" value={$transition['name']} >{$transition['name']}</th>
            </tr>
        </tr>
        {ifempty}
	        is Empty
        {/foreach} 
    </tbody>
</table>

</div>
</div>
{/template}
